
// GENERATED by vt-go-graphql 2017-09-28 23:33:00.824320291 -0700 PDT
package vtgraphql_api

const SampleMutationCreateTDORequest = `
{
	createTDO (input: {startDateTime: 10234, stopDateTime: 10234, source: "STRING_VALUE", mediaId: "STRING_VALUE", status: "STRING_VALUE", applicationId: "STRING_VALUE", id: "STRING_VALUE", name: "STRING_VALUE", description: "STRING_VALUE"})
  {createdDateTime modifiedDateTime id createdBy modifiedBy description name mediaId metadata {name }
jsondata 
	assets (id: "STRING_VALUE", assetType: "STRING_VALUE"){records {id name contentType description createdDateTime modifiedDateTime createdBy modifiedBy jsondata containerId uri assetType }
offset limit count }
security {global }
startDateTime stopDateTime source applicationId status tasks {records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }
}

`

const SampleMutationUpdateTDORequest = `
{
	updateTDO (input: {id: "STRING_VALUE", startDateTime: 10234, stopDateTime: 10234, source: "STRING_VALUE", mediaId: "STRING_VALUE", status: "STRING_VALUE", name: "STRING_VALUE", description: "STRING_VALUE"})
  {createdDateTime modifiedDateTime id createdBy modifiedBy description name mediaId metadata {name }
jsondata 
	assets (id: "STRING_VALUE", assetType: "STRING_VALUE"){records {id name contentType description createdDateTime modifiedDateTime createdBy modifiedBy jsondata containerId uri assetType }
offset limit count }
security {global }
startDateTime stopDateTime source applicationId status tasks {records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }
}

`

const SampleMutationDeleteTDORequest = `
{
	deleteTDO (id: "STRING_VALUE")
  {id message }

`

const SampleMutationCreateAssetRequest = `
{
	createAsset (input: {containerId: "STRING_VALUE", contentType: "STRING_VALUE", description: "STRING_VALUE", file: EH?, md5Checksum: "STRING_VALUE", assetType: "STRING_VALUE", uri: "STRING_VALUE", jsondata: EH?})
  {id name contentType description createdDateTime modifiedDateTime createdBy modifiedBy jsondata containerId uri assetType }

`

const SampleMutationDeleteAssetRequest = `
{
	deleteAsset (id: "STRING_VALUE")
  {id message }

`

const SampleMutationUpdateAssetRequest = `
{
	updateAsset (asset: {id: "STRING_VALUE"})
  {id name contentType description createdDateTime modifiedDateTime createdBy modifiedBy jsondata containerId uri assetType }

`

const SampleMutationRequestCloneRequest = `
{
	requestClone (input: {sourceApplicationId: "STRING_VALUE", destinationApplicationId: "STRING_VALUE", cloneBlobs: true or false})
  {id sourceApplicationId destinationApplicationId numberOfRecordings numberOfCompletedRecordings createdDateTime modifiedDateTime status percentage }

`

const SampleMutationCreateEngineRequest = `
{
	createEngine (input: {isPublic: true or false, name: "STRING_VALUE", description: "STRING_VALUE", categoryId: "STRING_VALUE", deploymentModel: 10234, price: 10234})
  {id ownerOrganizationId isPublic logoPath name description categoryId state price asset displayName validateUri executeUri applicationId createsRecording website rating createdDateTime modifiedDateTime createdBy modifiedBy deploymentModel 
	tasks (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }

	builds (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineId price validateUri executeUri status dockerImage runtime version report }
offset limit count }
}

`

const SampleMutationUpdateEngineRequest = `
{
	updateEngine (input: {id: "STRING_VALUE", isPublic: true or false, name: "STRING_VALUE", description: "STRING_VALUE", categoryId: "STRING_VALUE", deploymentModel: 10234, price: 10234, state: [active,disabled,pending,deleted,draft,ready]})
  {id ownerOrganizationId isPublic logoPath name description categoryId state price asset displayName validateUri executeUri applicationId createsRecording website rating createdDateTime modifiedDateTime createdBy modifiedBy deploymentModel 
	tasks (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }

	builds (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineId price validateUri executeUri status dockerImage runtime version report }
offset limit count }
}

`

const SampleMutationDeleteEngineRequest = `
{
	deleteEngine (id: "STRING_VALUE")
  {id message }

`

const SampleMutationCreateEngineBuildRequest = `
{
	createEngineBuild (input: {engineId: "STRING_VALUE"})
  {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineId price validateUri executeUri status dockerImage runtime version report }

`

const SampleMutationUpdateEngineBuildRequest = `
{
	updateEngineBuild (input: {id: "STRING_VALUE", engineId: "STRING_VALUE", action: [deploy,pause,unpause,approve,disapprove,invalidate,submit], file: EH?})
  {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineId price validateUri executeUri status dockerImage runtime version report }

`

const SampleMutationDeleteEngineBuildRequest = `
{
	deleteEngineBuild (id: "STRING_VALUE")
  {id message }

`

const SampleMutationUpdateTaskRequest = `
{
	updateTask (input: {id: "STRING_VALUE", status: "STRING_VALUE", jobId: "STRING_VALUE", taskOutput: "STRING_VALUE"})
  {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }

`

const SampleMutationPollTaskRequest = `
{
	pollTask (input: {id: "STRING_VALUE", jobId: "STRING_VALUE", pollPayload: EH?})
  {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }

`

const SampleMutationCreateJobRequest = `
{
	createJob (input: {status: "STRING_VALUE", targetId: "STRING_VALUE", tasks: {taskType: "STRING_VALUE"}, retries: 10234})
  {id name description createdDateTime modifiedDateTime createdBy modifiedBy targetId sourceAssetId 
	tasks (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE", targetId: "STRING_VALUE", applicationId: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }
applicationId }

`

const SampleMutationCancelJobRequest = `
{
	cancelJob (id: "STRING_VALUE")
  {id message }

`

const SampleMutationRetryJobRequest = `
{
	retryJob (id: "STRING_VALUE")
  {id name description createdDateTime modifiedDateTime createdBy modifiedBy targetId sourceAssetId 
	tasks (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE", targetId: "STRING_VALUE", applicationId: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }
applicationId }

`

const SampleMutationCreateApplicationRequest = `
{
	createApplication (input: {name: "STRING_VALUE", key: "STRING_VALUE", category: "STRING_VALUE", description: "STRING_VALUE", iconUrl: "STRING_VALUE", iconSvg: "STRING_VALUE", url: "STRING_VALUE", oauth2RedirectUrls: "STRING_VALUE", checkPermissions: true or false, permissionsRequired: "STRING_VALUE", deploymentModel: [FullyNetworkIsolated,MostlyNetworkIsolated,NonNetworkIsolated,HumanReview]})
  {id key name category description iconUrl iconSvg url deploymentModel createdDateTime modifiedDateTime clientSecret oauth2RedirectUrls organizationId status permissionsRequired }

`

const SampleMutationDeleteApplicationRequest = `
{
	deleteApplication (id: "STRING_VALUE")
  {id message }

`

const SampleMutationUpdateApplicationRequest = `
{
	updateApplication (input: {id: "STRING_VALUE", name: "STRING_VALUE", category: "STRING_VALUE", description: "STRING_VALUE", iconUrl: "STRING_VALUE", iconSvg: "STRING_VALUE", url: "STRING_VALUE", oauth2RedirectUrls: "STRING_VALUE", checkPermissions: true or false, permissionsRequired: "STRING_VALUE", deploymentModel: [FullyNetworkIsolated,MostlyNetworkIsolated,NonNetworkIsolated,HumanReview]})
  {id key name category description iconUrl iconSvg url deploymentModel createdDateTime modifiedDateTime clientSecret oauth2RedirectUrls organizationId status permissionsRequired }

`

const SampleMutationCreateEntityIdentifierTypeRequest = `
{
	createEntityIdentifierType (input: {label: "STRING_VALUE", labelPlural: "STRING_VALUE", iconClass: "STRING_VALUE", description: "STRING_VALUE", dataType: [image,audio,video,text], id: "STRING_VALUE"})
  {id label labelPlural iconClass description dataType }

`

const SampleMutationUpdateEntityIdentifierTypeRequest = `
{
	updateEntityIdentifierType (input: {id: "STRING_VALUE", label: "STRING_VALUE", labelPlural: "STRING_VALUE", iconClass: "STRING_VALUE", description: "STRING_VALUE", dataType: [image,audio,video,text]})
  {id label labelPlural iconClass description dataType }

`

const SampleMutationDeleteEntityIdentifierTypeRequest = `
{
	deleteEntityIdentifierType (id: "STRING_VALUE")
  {id message }

`

const SampleMutationCreateLibraryTypeRequest = `
{
	createLibraryType (input: {id: "STRING_VALUE", label: "STRING_VALUE", iconClass: "STRING_VALUE", entityIdentifierTypeIds: "STRING_VALUE", entityType: {name: "STRING_VALUE", namePlural: "STRING_VALUE", schema: EH?}})
  {id label iconClass entityIdentifierTypes {id label labelPlural iconClass description dataType }
entityTypeName entityTypeNamePlural entityType {name namePlural schema }
}

`

const SampleMutationUpdateLibraryTypeRequest = `
{
	updateLibraryType (input: {id: "STRING_VALUE", label: "STRING_VALUE", iconClass: "STRING_VALUE", entityIdentifierTypeIds: "STRING_VALUE", entityType: {name: "STRING_VALUE", namePlural: "STRING_VALUE", schema: EH?}})
  {id label iconClass entityIdentifierTypes {id label labelPlural iconClass description dataType }
entityTypeName entityTypeNamePlural entityType {name namePlural schema }
}

`

const SampleMutationDeleteLibraryTypeRequest = `
{
	deleteLibraryType (id: "STRING_VALUE")
  {id message }

`

const SampleMutationCreateLibraryRequest = `
{
	createLibrary (input: {name: "STRING_VALUE", applicationId: "STRING_VALUE", organizationId: "STRING_VALUE", libraryTypeId: "STRING_VALUE", coverImageUrl: "STRING_VALUE", description: "STRING_VALUE"})
  {createdDateTime modifiedDateTime id createdBy modifiedBy description name properties {name }
security {global }
version organizationId libraryType {id label iconClass entityIdentifierTypes {id label labelPlural iconClass description dataType }
entityTypeName entityTypeNamePlural entityType {name namePlural schema }
}
libraryTypeId coverImageUrl 
	engineModels (engineModelId: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy containerId libraryId library {createdDateTime modifiedDateTime id createdBy modifiedBy description name properties security version organizationId libraryType libraryTypeId coverImageUrl 
	engineModels (engineModelId: "STRING_VALUE")
	entities (id: "STRING_VALUE", isPublished: true or false, identifierTypeId: "STRING_VALUE", name: "STRING_VALUE", offset: 10234, limit: 10234){offset limit count records {id name createdDateTime modifiedDateTime createdBy modifiedBy properties libraryId profileImageUrl 
	identifiers (id: "STRING_VALUE", identifierTypeId: "STRING_VALUE", offset: 10234, limit: 10234){records {id entityId identifierType identifierTypeId title isPriority createdDateTime modifiedDateTime url contentType jsondata }
offset limit count }
isPublished jsondata }
}

	collaborators (collaboratorOrgId: "STRING_VALUE"){records {organizationId organization {id name type applications {records {id key name category description iconUrl iconSvg url deploymentModel createdDateTime modifiedDateTime clientSecret oauth2RedirectUrls organizationId status permissionsRequired }
offset limit count }
jsondata createdDateTime modifiedDateTime seatLimit status roles {name permissions {records {id name description }
offset limit count }
id }
users {records {name id permissions roles organization jsondata }
offset limit count }
blacklist {organizationId engines {id ownerOrganizationId isPublic logoPath name description categoryId state price asset displayName validateUri executeUri applicationId createsRecording website rating createdDateTime modifiedDateTime createdBy modifiedBy deploymentModel 
	tasks (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }

	builds (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineId price validateUri executeUri status dockerImage runtime version report }
offset limit count }
}
engineCategories {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineIds totalEngines iconClass editable videoOnly }
}
whitelist {organizationId engines engineCategories }
schemas {records {schema name id ownerOrganizationId organization }
offset limit count }
watchlists {records {id name organization organizationId watchlistType marketName trackMyPrograms trackAll agencyId advertiserId brandId campaignId marketId budget mediaSourceTypeId startDate stopDate }
offset limit count }

	collections (name: "STRING_VALUE", offset: 10234, limit: 10234){records {id name imageUrl ownerId description organization organizationId orgSharing createdDateTime modifiedDateTime programCount itemCount typeId isActive 
	widgets (offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name organization organizationId collection collectionId displayCollectionName displayTranscription width numberOfMentionsToShow adScript seoTags backgroundColor borderColor textColor createdDateTime }
offset limit count }
}
offset limit count }

	rootFolder (type: [watchlist,collection,cms]){id name description createdDateTime modifiedDateTime ownerId parent subfolders organization organizationId maxDepth orderIndex status }
}
status createdDateTime modifiedDateTime permissions libraryId library }
offset limit count }
}
libraryVersion trainJobId trainStatus dataUrl jsondata }
offset limit count }

	entities (id: "STRING_VALUE", isPublished: true or false, identifierTypeId: "STRING_VALUE", name: "STRING_VALUE", offset: 10234, limit: 10234)
	collaborators (collaboratorOrgId: "STRING_VALUE")}

`

const SampleMutationUpdateLibraryRequest = `
{
	updateLibrary (input: {id: "STRING_VALUE", name: "STRING_VALUE", coverImageUrl: "STRING_VALUE", description: "STRING_VALUE", libraryTypeId: "STRING_VALUE", version: 10234})
  {createdDateTime modifiedDateTime id createdBy modifiedBy description name properties {name }
security {global }
version organizationId libraryType {id label iconClass entityIdentifierTypes {id label labelPlural iconClass description dataType }
entityTypeName entityTypeNamePlural entityType {name namePlural schema }
}
libraryTypeId coverImageUrl 
	engineModels (engineModelId: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy containerId libraryId library {createdDateTime modifiedDateTime id createdBy modifiedBy description name properties security version organizationId libraryType libraryTypeId coverImageUrl 
	engineModels (engineModelId: "STRING_VALUE")
	entities (id: "STRING_VALUE", isPublished: true or false, identifierTypeId: "STRING_VALUE", name: "STRING_VALUE", offset: 10234, limit: 10234){offset limit count records {id name createdDateTime modifiedDateTime createdBy modifiedBy properties libraryId profileImageUrl 
	identifiers (id: "STRING_VALUE", identifierTypeId: "STRING_VALUE", offset: 10234, limit: 10234){records {id entityId identifierType identifierTypeId title isPriority createdDateTime modifiedDateTime url contentType jsondata }
offset limit count }
isPublished jsondata }
}

	collaborators (collaboratorOrgId: "STRING_VALUE"){records {organizationId organization {id name type applications {records {id key name category description iconUrl iconSvg url deploymentModel createdDateTime modifiedDateTime clientSecret oauth2RedirectUrls organizationId status permissionsRequired }
offset limit count }
jsondata createdDateTime modifiedDateTime seatLimit status roles {name permissions {records {id name description }
offset limit count }
id }
users {records {name id permissions roles organization jsondata }
offset limit count }
blacklist {organizationId engines {id ownerOrganizationId isPublic logoPath name description categoryId state price asset displayName validateUri executeUri applicationId createsRecording website rating createdDateTime modifiedDateTime createdBy modifiedBy deploymentModel 
	tasks (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy queuedDateTime completedDateTime status order isClone applicationId targetId engineId jobId buildId sourceAssetId mediaLengthSec taskPayload }
offset limit count }

	builds (status: "STRING_VALUE", offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineId price validateUri executeUri status dockerImage runtime version report }
offset limit count }
}
engineCategories {id name description createdDateTime modifiedDateTime createdBy modifiedBy engineIds totalEngines iconClass editable videoOnly }
}
whitelist {organizationId engines engineCategories }
schemas {records {schema name id ownerOrganizationId organization }
offset limit count }
watchlists {records {id name organization organizationId watchlistType marketName trackMyPrograms trackAll agencyId advertiserId brandId campaignId marketId budget mediaSourceTypeId startDate stopDate }
offset limit count }

	collections (name: "STRING_VALUE", offset: 10234, limit: 10234){records {id name imageUrl ownerId description organization organizationId orgSharing createdDateTime modifiedDateTime programCount itemCount typeId isActive 
	widgets (offset: 10234, limit: 10234, id: "STRING_VALUE"){records {id name organization organizationId collection collectionId displayCollectionName displayTranscription width numberOfMentionsToShow adScript seoTags backgroundColor borderColor textColor createdDateTime }
offset limit count }
}
offset limit count }

	rootFolder (type: [watchlist,collection,cms]){id name description createdDateTime modifiedDateTime ownerId parent subfolders organization organizationId maxDepth orderIndex status }
}
status createdDateTime modifiedDateTime permissions libraryId library }
offset limit count }
}
libraryVersion trainJobId trainStatus dataUrl jsondata }
offset limit count }

	entities (id: "STRING_VALUE", isPublished: true or false, identifierTypeId: "STRING_VALUE", name: "STRING_VALUE", offset: 10234, limit: 10234)
	collaborators (collaboratorOrgId: "STRING_VALUE")}

`

const SampleMutationDeleteLibraryRequest = `
{
	deleteLibrary (id: "STRING_VALUE")
  {id message }

`

const SampleMutationCreateEntityRequest = `
{
	createEntity (input: {name: "STRING_VALUE", description: "STRING_VALUE", libraryId: "STRING_VALUE", profileImageUrl: "STRING_VALUE", jsondata: EH?, isPublished: true or false})
  {id name createdDateTime modifiedDateTime createdBy modifiedBy properties {name }
libraryId profileImageUrl 
	identifiers (id: "STRING_VALUE", identifierTypeId: "STRING_VALUE", offset: 10234, limit: 10234){records {id entityId identifierType {id label labelPlural iconClass description dataType }
identifierTypeId title isPriority createdDateTime modifiedDateTime url contentType jsondata }
offset limit count }
isPublished jsondata }

`

const SampleMutationUpdateEntityRequest = `
{
	updateEntity (input: {id: "STRING_VALUE", name: "STRING_VALUE", description: "STRING_VALUE", profileImageUrl: "STRING_VALUE"})
  {id name createdDateTime modifiedDateTime createdBy modifiedBy properties {name }
libraryId profileImageUrl 
	identifiers (id: "STRING_VALUE", identifierTypeId: "STRING_VALUE", offset: 10234, limit: 10234){records {id entityId identifierType {id label labelPlural iconClass description dataType }
identifierTypeId title isPriority createdDateTime modifiedDateTime url contentType jsondata }
offset limit count }
isPublished jsondata }

`

const SampleMutationDeleteEntityRequest = `
{
	deleteEntity (id: "STRING_VALUE")
  {id message }

`

const SampleMutationCreateEntityIdentifierRequest = `
{
	createEntityIdentifier (input: {entityId: "STRING_VALUE", identifierTypeId: "STRING_VALUE", title: "STRING_VALUE", isPriority: true or false, url: "STRING_VALUE", jsondata: EH?, contentType: "STRING_VALUE", file: EH?})
  {id entityId identifierType {id label labelPlural iconClass description dataType }
identifierTypeId title isPriority createdDateTime modifiedDateTime url contentType jsondata }

`

const SampleMutationUpdateEntityIdentifierRequest = `
{
	updateEntityIdentifier (input: {id: "STRING_VALUE", title: "STRING_VALUE", isPriority: true or false, url: "STRING_VALUE"})
  {id entityId identifierType {id label labelPlural iconClass description dataType }
identifierTypeId title isPriority createdDateTime modifiedDateTime url contentType jsondata }

`

const SampleMutationDeleteEntityIdentifierRequest = `
{
	deleteEntityIdentifier (id: "STRING_VALUE")
  {id message }

`

const SampleMutationApplicationWorkflowRequest = `
{
	applicationWorkflow (input: {id: "STRING_VALUE", action: [submit,approve,reject,deploy,disable,undelete]})
  {id key name category description iconUrl iconSvg url deploymentModel createdDateTime modifiedDateTime clientSecret oauth2RedirectUrls organizationId status permissionsRequired }

`

const SampleMutationCreateIngestionConfigurationRequest = `
{
	createIngestionConfiguration (input: {applicationId: "STRING_VALUE", type: "STRING_VALUE", name: "STRING_VALUE", jsondata: EH?})
  {id applicationId type name createdDateTime modifiedDateTime emailAddress jsondata }

`

const SampleMutationUpdateIngestionConfigurationRequest = `
{
	updateIngestionConfiguration (input: {id: "STRING_VALUE", type: "STRING_VALUE", name: "STRING_VALUE", jsondata: EH?})
  {id applicationId type name createdDateTime modifiedDateTime emailAddress jsondata }

`

const SampleMutationDeleteIngestionConfigurationRequest = `
{
	deleteIngestionConfiguration (id: "STRING_VALUE")
  {id message }

`

